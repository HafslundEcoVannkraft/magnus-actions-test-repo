# This is a basic workflow to help you get started with Actions

name: print env var


on:
  workflow_dispatch:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  job-name-appears-in-step:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    outputs:
      a: ${{ steps.export-env.outputs.a }}
      b: ${{ steps.export-env.outputs.b }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: job name ${{ github.job.name }}
        shell: python3 {0}
        env:
          directory: 2999-app-landing-zones/alfa/1_subscription_identity
        run: |
          # if changed dir is 1_subscription
          # and parent dir of parent dir is 2999-app-landing-zones
          # then it's a new lz
          changed_dir = "${{ env.directory }}"
          parts = changed_dir.split('/')
          if len(parts) == 3 and parts[0] == '2999-app-landing-zones' and parts[2][:14] == '1_subscription':
            print("new lz")
          else:
            print("not new lz")
      
      - name: Check if new LZ2
        shell: python3 {0}
        env:
          directory: 2130-re2-vnet-connectivity
        run: |
          # if changed dir is 1_subscription
          # and parent dir of parent dir is 2999-app-landing-zones
          # then it's a new lz
          changed_dir = "${{ env.directory }}"
          parts = changed_dir.split('/')
          if len(parts) == 3 and parts[0] == '2999-app-landing-zones' and parts[2][:14] == '1_subscription':
            print("new lz")
          else:
            print("not new lz")

      - name: echo plan file
        run: | 
          plan_file="$RUNNER_TEMP/$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 16 | head -n 1).tfplan"
          echo "plan_file=$plan_file"

      - name: export env
        id: export-env
        run: |
          set -a
          a=foo
          b=bar
          $GITHUB_WORKSPACE/.github/workflows/scripts/persist-exported-env.sh
          cat $GITHUB_ENV
          echo "a=$a" >> $GITHUB_OUTPUT
          echo "b=$b" >> $GITHUB_OUTPUT

      - name: print env
        run: | 
          echo $a
          echo $b
        
  # job-with-approval:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   needs: job-no-approval
  #   environment: requires-approval
  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
  #     - name: print needs outputs
  #       run: | 
  #         echo ${{ needs.job-no-approval.outputs.a }}
  #         echo ${{ needs.job-no-approval.outputs.b }}