name: Matrix from JSON

on:
  push:
    branches:
    - main

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Generate matrix
      id: generate
      run: |
        # we make a JSON list of 10 strings
        echo '['$(for i in $(seq 1 10); do echo -n "\"test$i\","; done | sed 's/,$//')']' > matrix.json

    - name: Set matrix for next job
      id: set-matrix
      run: echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

    - name: Check if Rover Plan is required
      id: check-rover-plan-required
      shell: python3 {0}
      run: |
        import json

        # Parse the input as JSON
        parsed_json = json.loads('${{ steps.set-matrix.outputs.matrix }}')

        # Check if the parsed JSON is a list and has a length greater than 0
        run_rover_plan = isinstance(parsed_json, list) and len(parsed_json) > 0

        # Print the result
        run_rover_plan_val = str(run_rover_plan).lower()
        print(f"run_rover_plan={run_rover_plan_val}")
        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
          print(f"run_rover_plan={run_rover_plan_val}\n", file=fh)
    
    - name: check value of run_rover_plan
      run: |
        echo "${{ steps.check-rover-plan-required.outputs.run_rover_plan }}"
    