name: Matrix from JSON

on:
  workflow_dispatch:
  # push:
  #   branches:
  #   - main

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check shred
      run: |
        shred --help

    - name: Generate matrix
      id: generate
      run: |
        # we make a JSON list of 10 strings
        #echo '['$(for i in $(seq 1 10); do echo -n "\"test$i\","; done | sed 's/,$//')']' > matrix.json
        echo '[]' > matrix.json
        #echo '[' > matrix.json

    - name: Set matrix for next job
      id: set-matrix
      run: echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT

    - name: Check if Rover Plan is required
      id: check-rover-plan-required
      shell: python3 {0}
      run: |
        import json
        import os

        input_string = '${{ steps.set-matrix.outputs.matrix }}'

        try:
          parsed_json = json.loads(input_string)
        except json.decoder.JSONDecodeError:
          print(f"invalid JSON: {input_string}")
          exit(1)

        run_rover_plan = isinstance(parsed_json, list) and len(parsed_json) > 0

        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
          print(f"run_rover_plan={str(run_rover_plan).lower()}\n", file=fh)
    
    - name: check value of run_rover_plan
      run: |
        echo "${{ steps.check-rover-plan-required.outputs.run_rover_plan }}"
    